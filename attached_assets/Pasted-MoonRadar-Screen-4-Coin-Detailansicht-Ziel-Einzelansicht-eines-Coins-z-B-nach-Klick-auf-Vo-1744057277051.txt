MoonRadar – Screen 4: Coin-Detailansicht

Ziel:

Einzelansicht eines Coins (z. B. nach Klick auf „Vollmond des Monats“ oder aus der Watchlist).
Die Ansicht zeigt alle relevanten Live-Daten & Interaktionen zu einem Coin.

⸻

Technische UI-Funktion & Elemente

1. Kopfzeile
	•	Titel: Coin-Name (z. B. WAGMI) + Ticker ($WAGMI)
	•	Links: Zurück-Button ←
	•	Rechts: Share-Button (öffnet Teilen-Overlay)

⸻

2. Live-Daten (per API laden)

Alle Daten müssen live über eine der aktuellsten frei zugänglichen APIs bezogen werden – z. B.:
	•	DexScreener API
	•	Birdeye API (für Solana-Projekte)
	•	CoinGecko API
	•	CoinPaprika / CoinMarketCap (wenn verfügbar)

Datenpunkte:
	•	Aktueller Preis ($)
	•	24h Performance in % (grün/rot)
	•	7d Performance in % (optional)
	•	Whale-Quote in % (→ zur Einstufung: 🚀 / 🧨 / 💣)
	•	Handelsvolumen 24h ($)
	•	Anzahl der Holder
	•	Liquidity Pool Daten (wenn DEX)
	•	Chart-Vorschau oder Link zu Live-Chart (z. B. DexScreener)

⸻

3. Visuelle Symbole
	•	Mondphasen-Icon (🌑 / 🌓 / 🌕)
→ abhängig von Position im MoonRadar-System
	•	Whale-Icon je nach Quote:
	•	🚀 unter 5 %
	•	🧨 unter 10 %
	•	💣 unter 15 %
	•	Coin-Logo / Symbol

⸻

4. Buttons & Funktionen
	•	[Details extern ansehen] → Öffnet externen Chart (DexScreener/Birdeye)
	•	[Zur Watchlist hinzufügen / entfernen]
→ Dynamisch: Zustand abhängig vom User (via Supabase)
	•	[Teilen]
→ Öffnet Teilen-Overlay (Screen 5)
	•	[Link kopieren]
→ Kopiert moonradar.app/coin/WAGMI o. ä. in Zwischenablage

⸻

Backend-Anforderungen:
	•	Datenquellen müssen regelmäßig aktualisiert werden (keine statischen JSONs)
	•	Alle Daten userbasiert abrufbar & verlinkbar
	•	Watchlist-Status muss persistiert bleiben (auch nach Login)

⸻

Design-Vorgaben:
	•	Darkmode UI (#0D0D0D)
	•	Kontrast: Text in #F2F2F2, Highlights in Neon-Grün #00FF88
	•	Fonts: Orbitron / Exo 2 / Space Mono
	•	Spacing mobilfreundlich (Buttons groß genug für Touch)

⸻

Diese Definition kannst du direkt 1:1 weitergeben – sie enthält alle Funktionen, Daten, Logik, Backend und Frontend-Designinfos.